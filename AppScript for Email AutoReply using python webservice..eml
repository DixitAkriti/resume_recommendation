function postJobEmail(message, subject, semail, sname) {
var url = "http://3.109.208.72:5000/process-job-email";
var headers = {
"Content-Type": "application/json; charset=utf-8",
};
var payload = {
emailData: {
subject: subject,
content: message,
sender: {
email: semail,
name: sname
},
receivedTime: "14/11/2023 19:48:00"
}
};
var options = {
'method' : 'post',
'contentType': 'application/json',
'payload' : JSON.stringify(payload),
'headers': headers,
'muteHttpExceptions': true
};
var response = UrlFetchApp.fetch(url, options);
return response.getContentText();
}
function getAnswerFromResponse(responseText) {
var jsonResponse = JSON.parse(responseText);
var answer = jsonResponse.data.replyMessage.Answer;
return answer;
}
// Function to call GPT-3.5 and determine if the subject is related to a
job opening
async function isJobOpening(subject) {
const prompt = `Analyze the following email subject and determine if it is
related to a job opening position. If yes, provide the role it is looking
for. If not, write "Not a job opening".\n\nSubject: ${subject}\n\nRole: `;
const response = await openai.completePrompt(prompt, { maxTokens: 50 });
return response.choices[0].text.trim();
}
function getDraftTemplate() {
const draftSubject = 'Regarding CaritaTech'; // Replace with your draft
subject
const drafts = GmailApp.search('in:drafts subject:"' + draftSubject + '"');
const draft = drafts[0];
const msg = draft.getMessages()[0]; // Corrected line
return msg;
}
function extractName(email) {
const match = email.match(/(.*)<.*>/);
return match ? match[1].trim() : '';
}
function sendSmartAutoReply() {
Logger.log('sendSmartAutoReply started');
const msgTemplate = getDraftTemplate();
const templateBody = msgTemplate.getBody();
const specificSubject = 'MarkLogic - Data Architect 345'; // Replace with
your desired subject or may need to work on regex if you want to scan
specific emails
// Calculate the date 7 days ago
const sevenDaysAgo = new Date();
sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);
const afterDate = sevenDaysAgo.toISOString().slice(0, 10).replace(/-/g, '/'
);
// Get or create the label to mark replied emails
const repliedLabelName = 'Replied by MrR';
let repliedLabel = GmailApp.getUserLabelByName(repliedLabelName);
if (!repliedLabel) {
repliedLabel = GmailApp.createLabel(repliedLabelName);
}
const messages = GmailApp.search(
'subject:"' +
specificSubject +
'" is:unread after:' +
afterDate +
' -label:' +
repliedLabelName
);
Logger.log('Number of messages found: ' + messages.length);
// Get the attachment from Google Drive
const fileId = '1UyFAubijbuYoeag_BbXiy0kKDv7YkYnc';
const file = DriveApp.getFileById(fileId);
const attachment = file.getBlob();
messages.forEach(function (thread) {
const message = thread.getMessages()[0];
const recipientName = extractName(message.getFrom());
const replyToEmail = message.getFrom();
var emailRegex = /([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\.[a-zA-Z0-9._-]+)/gi;
var recipientEmail = replyToEmail.match(emailRegex); //"
monica@caritatech.com"
const postJobResponse = postJobEmail(message.getPlainBody(), specificSubject,
recipientEmail, recipientName)
Logger.log(postJobResponse)
const options = {
htmlBody: `<div style="font-family: Arial; white-space: pre-wrap;">${
getAnswerFromResponse(postJobResponse)}</div>`,
attachments: [attachment] // Add the attachment to the email
};
message.reply('', options); // Reply to the same email thread
thread.markRead();

Logger.log('Auto-reply sent to: ' + recipientEmail);
thread.addLabel(repliedLabel);

});
Logger.log('sendSmartAutoReply finished');
}

--0000000000009abe9a060b589fc9
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div style=3D"color:rgb(212,212,212);background-color:rgb(=
30,30,30);font-family:Menlo,Monaco,&quot;Courier New&quot;,monospace;font-s=
ize:12px;line-height:18px;white-space:pre"><div><span style=3D"color:rgb(86=
,156,214)">function</span> <span style=3D"color:rgb(220,220,170)">postJobEm=
ail</span>(<span style=3D"color:rgb(156,220,254)">message</span>, <span sty=
le=3D"color:rgb(156,220,254)">subject</span>, <span style=3D"color:rgb(156,=
220,254)">semail</span>, <span style=3D"color:rgb(156,220,254)">sname</span=
>) {</div><div>    <span style=3D"color:rgb(86,156,214)">var</span> <span s=
tyle=3D"color:rgb(156,220,254)">url</span> =3D <span style=3D"color:rgb(206=
,145,120)">&quot;<a href=3D"http://3.109.208.72:5000/process-job-email">htt=
p://3.109.208.72:5000/process-job-email</a>&quot;</span>;</div><div>    <sp=
an style=3D"color:rgb(86,156,214)">var</span> <span style=3D"color:rgb(156,=
220,254)">headers</span> =3D {</div><div>      <span style=3D"color:rgb(206=
,145,120)">&quot;Content-Type&quot;</span><span style=3D"color:rgb(156,220,=
254)">:</span> <span style=3D"color:rgb(206,145,120)">&quot;application/jso=
n; charset=3Dutf-8&quot;</span>,</div><div>    };</div><div>  </div><div>  =
  <span style=3D"color:rgb(86,156,214)">var</span> <span style=3D"color:rgb=
(156,220,254)">payload</span> =3D {</div><div>      <span style=3D"color:rg=
b(156,220,254)">emailData</span><span style=3D"color:rgb(156,220,254)">:</s=
pan> {</div><div>        <span style=3D"color:rgb(156,220,254)">subject</sp=
an><span style=3D"color:rgb(156,220,254)">:</span> <span style=3D"color:rgb=
(156,220,254)">subject</span>,</div><div>        <span style=3D"color:rgb(1=
56,220,254)">content</span><span style=3D"color:rgb(156,220,254)">:</span> =
<span style=3D"color:rgb(156,220,254)">message</span>,</div><div>        <s=
pan style=3D"color:rgb(156,220,254)">sender</span><span style=3D"color:rgb(=
156,220,254)">:</span> {</div><div>          <span style=3D"color:rgb(156,2=
20,254)">email</span><span style=3D"color:rgb(156,220,254)">:</span> <span =
style=3D"color:rgb(156,220,254)">semail</span>,</div><div>          <span s=
tyle=3D"color:rgb(156,220,254)">name</span><span style=3D"color:rgb(156,220=
,254)">:</span> <span style=3D"color:rgb(156,220,254)">sname</span></div><d=
iv>        },</div><div>        <span style=3D"color:rgb(156,220,254)">rece=
ivedTime</span><span style=3D"color:rgb(156,220,254)">:</span> <span style=
=3D"color:rgb(206,145,120)">&quot;14/11/2023 19:48:00&quot;</span></div><di=
v>      }</div><div>    };</div><div>  </div><div>    <span style=3D"color:=
rgb(86,156,214)">var</span> <span style=3D"color:rgb(156,220,254)">options<=
/span> =3D {</div><div>      <span style=3D"color:rgb(206,145,120)">&#39;me=
thod&#39;</span><span style=3D"color:rgb(156,220,254)"> :</span> <span styl=
e=3D"color:rgb(206,145,120)">&#39;post&#39;</span>,</div><div>      <span s=
tyle=3D"color:rgb(206,145,120)">&#39;contentType&#39;</span><span style=3D"=
color:rgb(156,220,254)">:</span> <span style=3D"color:rgb(206,145,120)">&#3=
9;application/json&#39;</span>,</div><div>      <span style=3D"color:rgb(20=
6,145,120)">&#39;payload&#39;</span><span style=3D"color:rgb(156,220,254)">=
 :</span> <span style=3D"color:rgb(156,220,254)">JSON</span>.<span style=3D=
"color:rgb(220,220,170)">stringify</span>(<span style=3D"color:rgb(156,220,=
254)">payload</span>),</div><div>      <span style=3D"color:rgb(206,145,120=
)">&#39;headers&#39;</span><span style=3D"color:rgb(156,220,254)">:</span> =
<span style=3D"color:rgb(156,220,254)">headers</span>,</div><div>      <spa=
n style=3D"color:rgb(206,145,120)">&#39;muteHttpExceptions&#39;</span><span=
 style=3D"color:rgb(156,220,254)">:</span> <span style=3D"color:rgb(86,156,=
214)">true</span></div><div>    };</div><div>  </div><div>    <span style=
=3D"color:rgb(86,156,214)">var</span> <span style=3D"color:rgb(156,220,254)=
">response</span> =3D <span style=3D"color:rgb(156,220,254)">UrlFetchApp</s=
pan>.<span style=3D"color:rgb(220,220,170)">fetch</span>(<span style=3D"col=
or:rgb(156,220,254)">url</span>, <span style=3D"color:rgb(156,220,254)">opt=
ions</span>);</div><div>  </div><div>    <span style=3D"color:rgb(197,134,1=
92)">return</span> <span style=3D"color:rgb(156,220,254)">response</span>.<=
span style=3D"color:rgb(220,220,170)">getContentText</span>();</div><div>  =
</div><div>  }</div><div>  </div><div>  <span style=3D"color:rgb(86,156,214=
)">function</span> <span style=3D"color:rgb(220,220,170)">getAnswerFromResp=
onse</span>(<span style=3D"color:rgb(156,220,254)">responseText</span>) {</=
div><div>    </div><div>    <span style=3D"color:rgb(86,156,214)">var</span=
> <span style=3D"color:rgb(156,220,254)">jsonResponse</span> =3D <span styl=
e=3D"color:rgb(156,220,254)">JSON</span>.<span style=3D"color:rgb(220,220,1=
70)">parse</span>(<span style=3D"color:rgb(156,220,254)">responseText</span=
>);</div><div>  </div><div>    <span style=3D"color:rgb(86,156,214)">var</s=
pan> <span style=3D"color:rgb(156,220,254)">answer</span> =3D <span style=
=3D"color:rgb(156,220,254)">jsonResponse</span>.<span style=3D"color:rgb(15=
6,220,254)">data</span>.<span style=3D"color:rgb(156,220,254)">replyMessage=
</span>.<span style=3D"color:rgb(156,220,254)">Answer</span>;</div><div>  <=
/div><div>    <span style=3D"color:rgb(197,134,192)">return</span> <span st=
yle=3D"color:rgb(156,220,254)">answer</span>;</div><div>  }</div><div>  </d=
iv><div>  </div><div>  <span style=3D"color:rgb(106,153,85)">// Function to=
 call GPT-3.5 and determine if the subject is related to a job opening</spa=
n></div><div>  <span style=3D"color:rgb(86,156,214)">async</span> <span sty=
le=3D"color:rgb(86,156,214)">function</span> <span style=3D"color:rgb(220,2=
20,170)">isJobOpening</span>(<span style=3D"color:rgb(156,220,254)">subject=
</span>) {</div><div>    <span style=3D"color:rgb(86,156,214)">const</span>=
 <span style=3D"color:rgb(79,193,255)">prompt</span> =3D <span style=3D"col=
or:rgb(206,145,120)">`Analyze the following email subject and determine if =
it is related to a job opening position. If yes, provide the role it is loo=
king for. If not, write &quot;Not a job opening&quot;.</span><span style=3D=
"color:rgb(215,186,125)">\n\n</span><span style=3D"color:rgb(206,145,120)">=
Subject: </span><span style=3D"color:rgb(86,156,214)">${</span><span style=
=3D"color:rgb(156,220,254)">subject</span><span style=3D"color:rgb(86,156,2=
14)">}</span><span style=3D"color:rgb(215,186,125)">\n\n</span><span style=
=3D"color:rgb(206,145,120)">Role: `</span>;</div><div>    <span style=3D"co=
lor:rgb(86,156,214)">const</span> <span style=3D"color:rgb(79,193,255)">res=
ponse</span> =3D <span style=3D"color:rgb(197,134,192)">await</span> <span =
style=3D"color:rgb(156,220,254)">openai</span>.<span style=3D"color:rgb(220=
,220,170)">completePrompt</span>(<span style=3D"color:rgb(79,193,255)">prom=
pt</span>, { <span style=3D"color:rgb(156,220,254)">maxTokens</span><span s=
tyle=3D"color:rgb(156,220,254)">:</span> <span style=3D"color:rgb(181,206,1=
68)">50</span> });</div><div>  </div><div>    <span style=3D"color:rgb(197,=
134,192)">return</span> <span style=3D"color:rgb(79,193,255)">response</spa=
n>.<span style=3D"color:rgb(156,220,254)">choices</span>[<span style=3D"col=
or:rgb(181,206,168)">0</span>].<span style=3D"color:rgb(156,220,254)">text<=
/span>.<span style=3D"color:rgb(220,220,170)">trim</span>();</div><div>  }<=
/div><div>  </div><div>  <span style=3D"color:rgb(86,156,214)">function</sp=
an> <span style=3D"color:rgb(220,220,170)">getDraftTemplate</span>() {</div=
><div>    <span style=3D"color:rgb(86,156,214)">const</span> <span style=3D=
"color:rgb(79,193,255)">draftSubject</span> =3D <span style=3D"color:rgb(20=
6,145,120)">&#39;Regarding CaritaTech&#39;</span>; <span style=3D"color:rgb=
(106,153,85)">// Replace with your draft subject</span></div><div>    <span=
 style=3D"color:rgb(86,156,214)">const</span> <span style=3D"color:rgb(79,1=
93,255)">drafts</span> =3D <span style=3D"color:rgb(156,220,254)">GmailApp<=
/span>.<span style=3D"color:rgb(220,220,170)">search</span>(<span style=3D"=
color:rgb(206,145,120)">&#39;in:drafts subject:&quot;&#39;</span> + <span s=
tyle=3D"color:rgb(79,193,255)">draftSubject</span> + <span style=3D"color:r=
gb(206,145,120)">&#39;&quot;&#39;</span>);</div><div>    <span style=3D"col=
or:rgb(86,156,214)">const</span> <span style=3D"color:rgb(79,193,255)">draf=
t</span> =3D <span style=3D"color:rgb(79,193,255)">drafts</span>[<span styl=
e=3D"color:rgb(181,206,168)">0</span>];</div><div>    <span style=3D"color:=
rgb(86,156,214)">const</span> <span style=3D"color:rgb(79,193,255)">msg</sp=
an> =3D <span style=3D"color:rgb(79,193,255)">draft</span>.<span style=3D"c=
olor:rgb(220,220,170)">getMessages</span>()[<span style=3D"color:rgb(181,20=
6,168)">0</span>]; <span style=3D"color:rgb(106,153,85)">// Corrected line<=
/span></div><div>    <span style=3D"color:rgb(197,134,192)">return</span> <=
span style=3D"color:rgb(79,193,255)">msg</span>;</div><div>  }</div><div>  =
</div><div>  <span style=3D"color:rgb(86,156,214)">function</span> <span st=
yle=3D"color:rgb(220,220,170)">extractName</span>(<span style=3D"color:rgb(=
156,220,254)">email</span>) {</div><div>    <span style=3D"color:rgb(86,156=
,214)">const</span> <span style=3D"color:rgb(79,193,255)">match</span> =3D =
<span style=3D"color:rgb(156,220,254)">email</span>.<span style=3D"color:rg=
b(220,220,170)">match</span>(<span style=3D"color:rgb(209,105,105)">/</span=
><span style=3D"color:rgb(206,145,120)">(</span><span style=3D"color:rgb(20=
9,105,105)">.</span><span style=3D"color:rgb(215,186,125)">*</span><span st=
yle=3D"color:rgb(206,145,120)">)</span><span style=3D"color:rgb(209,105,105=
)">&lt;.</span><span style=3D"color:rgb(215,186,125)">*</span><span style=
=3D"color:rgb(209,105,105)">&gt;/</span>);</div><div>    <span style=3D"col=
or:rgb(197,134,192)">return</span> <span style=3D"color:rgb(79,193,255)">ma=
tch</span> ? <span style=3D"color:rgb(79,193,255)">match</span>[<span style=
=3D"color:rgb(181,206,168)">1</span>].<span style=3D"color:rgb(220,220,170)=
">trim</span>() : <span style=3D"color:rgb(206,145,120)">&#39;&#39;</span>;=
</div><div>  }</div><div>  </div><div>  <span style=3D"color:rgb(86,156,214=
)">function</span> <span style=3D"color:rgb(220,220,170)">sendSmartAutoRepl=
y</span>() {</div><div>    <span style=3D"color:rgb(156,220,254)">Logger</s=
pan>.<span style=3D"color:rgb(220,220,170)">log</span>(<span style=3D"color=
:rgb(206,145,120)">&#39;sendSmartAutoReply started&#39;</span>);</div><div>=
    <span style=3D"color:rgb(86,156,214)">const</span> <span style=3D"color=
:rgb(79,193,255)">msgTemplate</span> =3D <span style=3D"color:rgb(220,220,1=
70)">getDraftTemplate</span>();</div><div>    <span style=3D"color:rgb(86,1=
56,214)">const</span> <span style=3D"color:rgb(79,193,255)">templateBody</s=
pan> =3D <span style=3D"color:rgb(79,193,255)">msgTemplate</span>.<span sty=
le=3D"color:rgb(220,220,170)">getBody</span>();</div><div>    <span style=
=3D"color:rgb(86,156,214)">const</span> <span style=3D"color:rgb(79,193,255=
)">specificSubject</span> =3D <span style=3D"color:rgb(206,145,120)">&#39;M=
arkLogic - Data Architect 345&#39;</span>; <span style=3D"color:rgb(106,153=
,85)">// Replace with your desired subject or may need to work on regex if =
you want to scan specific emails</span></div><div>  </div><div>  </div><div=
>    <span style=3D"color:rgb(106,153,85)">// Calculate the date 7 days ago=
</span></div><div>    <span style=3D"color:rgb(86,156,214)">const</span> <s=
pan style=3D"color:rgb(79,193,255)">sevenDaysAgo</span> =3D <span style=3D"=
color:rgb(86,156,214)">new</span> <span style=3D"color:rgb(78,201,176)">Dat=
e</span>();</div><div>    <span style=3D"color:rgb(79,193,255)">sevenDaysAg=
o</span>.<span style=3D"color:rgb(220,220,170)">setDate</span>(<span style=
=3D"color:rgb(79,193,255)">sevenDaysAgo</span>.<span style=3D"color:rgb(220=
,220,170)">getDate</span>() - <span style=3D"color:rgb(181,206,168)">7</spa=
n>);</div><div>    <span style=3D"color:rgb(86,156,214)">const</span> <span=
 style=3D"color:rgb(79,193,255)">afterDate</span> =3D <span style=3D"color:=
rgb(79,193,255)">sevenDaysAgo</span>.<span style=3D"color:rgb(220,220,170)"=
>toISOString</span>().<span style=3D"color:rgb(220,220,170)">slice</span>(<=
span style=3D"color:rgb(181,206,168)">0</span>, <span style=3D"color:rgb(18=
1,206,168)">10</span>).<span style=3D"color:rgb(220,220,170)">replace</span=
>(<span style=3D"color:rgb(209,105,105)">/-/</span><span style=3D"color:rgb=
(86,156,214)">g</span>, <span style=3D"color:rgb(206,145,120)">&#39;/&#39;<=
/span>);</div><div>  </div><div>  </div><div>    <span style=3D"color:rgb(1=
06,153,85)">// Get or create the label to mark replied emails</span></div><=
div>    <span style=3D"color:rgb(86,156,214)">const</span> <span style=3D"c=
olor:rgb(79,193,255)">repliedLabelName</span> =3D <span style=3D"color:rgb(=
206,145,120)">&#39;Replied by MrR&#39;</span>;</div><div>    <span style=3D=
"color:rgb(86,156,214)">let</span> <span style=3D"color:rgb(156,220,254)">r=
epliedLabel</span> =3D <span style=3D"color:rgb(156,220,254)">GmailApp</spa=
n>.<span style=3D"color:rgb(220,220,170)">getUserLabelByName</span>(<span s=
tyle=3D"color:rgb(79,193,255)">repliedLabelName</span>);</div><div>    <spa=
n style=3D"color:rgb(197,134,192)">if</span> (!<span style=3D"color:rgb(156=
,220,254)">repliedLabel</span>) {</div><div>      <span style=3D"color:rgb(=
156,220,254)">repliedLabel</span> =3D <span style=3D"color:rgb(156,220,254)=
">GmailApp</span>.<span style=3D"color:rgb(220,220,170)">createLabel</span>=
(<span style=3D"color:rgb(79,193,255)">repliedLabelName</span>);</div><div>=
    }</div><div>  </div><div>    <span style=3D"color:rgb(86,156,214)">cons=
t</span> <span style=3D"color:rgb(79,193,255)">messages</span> =3D <span st=
yle=3D"color:rgb(156,220,254)">GmailApp</span>.<span style=3D"color:rgb(220=
,220,170)">search</span>(</div><div>      <span style=3D"color:rgb(206,145,=
120)">&#39;subject:&quot;&#39;</span> +</div><div>        <span style=3D"co=
lor:rgb(79,193,255)">specificSubject</span> +</div><div>        <span style=
=3D"color:rgb(206,145,120)">&#39;&quot; is:unread after:&#39;</span> +</div=
><div>        <span style=3D"color:rgb(79,193,255)">afterDate</span> +</div=
><div>        <span style=3D"color:rgb(206,145,120)">&#39; -label:&#39;</sp=
an> +</div><div>        <span style=3D"color:rgb(79,193,255)">repliedLabelN=
ame</span></div><div>    );</div><div>    </div><div>    </div><div>    <sp=
an style=3D"color:rgb(156,220,254)">Logger</span>.<span style=3D"color:rgb(=
220,220,170)">log</span>(<span style=3D"color:rgb(206,145,120)">&#39;Number=
 of messages found: &#39;</span> + <span style=3D"color:rgb(79,193,255)">me=
ssages</span>.<span style=3D"color:rgb(156,220,254)">length</span>);</div><=
div>  </div><div>    <span style=3D"color:rgb(106,153,85)">// Get the attac=
hment from Google Drive</span></div><div>    <span style=3D"color:rgb(86,15=
6,214)">const</span> <span style=3D"color:rgb(79,193,255)">fileId</span> =
=3D <span style=3D"color:rgb(206,145,120)">&#39;1UyFAubijbuYoeag_BbXiy0kKDv=
7YkYnc&#39;</span>;</div><div>    <span style=3D"color:rgb(86,156,214)">con=
st</span> <span style=3D"color:rgb(79,193,255)">file</span> =3D <span style=
=3D"color:rgb(156,220,254)">DriveApp</span>.<span style=3D"color:rgb(220,22=
0,170)">getFileById</span>(<span style=3D"color:rgb(79,193,255)">fileId</sp=
an>);</div><div>    <span style=3D"color:rgb(86,156,214)">const</span> <spa=
n style=3D"color:rgb(79,193,255)">attachment</span> =3D <span style=3D"colo=
r:rgb(79,193,255)">file</span>.<span style=3D"color:rgb(220,220,170)">getBl=
ob</span>();</div><div>  </div><div>    <span style=3D"color:rgb(79,193,255=
)">messages</span>.<span style=3D"color:rgb(220,220,170)">forEach</span>(<s=
pan style=3D"color:rgb(86,156,214)">function</span> (<span style=3D"color:r=
gb(156,220,254)">thread</span>) {</div><div>      <span style=3D"color:rgb(=
86,156,214)">const</span> <span style=3D"color:rgb(79,193,255)">message</sp=
an> =3D <span style=3D"color:rgb(156,220,254)">thread</span>.<span style=3D=
"color:rgb(220,220,170)">getMessages</span>()[<span style=3D"color:rgb(181,=
206,168)">0</span>];</div><div>      <span style=3D"color:rgb(86,156,214)">=
const</span> <span style=3D"color:rgb(79,193,255)">recipientName</span> =3D=
 <span style=3D"color:rgb(220,220,170)">extractName</span>(<span style=3D"c=
olor:rgb(79,193,255)">message</span>.<span style=3D"color:rgb(220,220,170)"=
>getFrom</span>());</div><div>  </div><div>      <span style=3D"color:rgb(8=
6,156,214)">const</span> <span style=3D"color:rgb(79,193,255)">replyToEmail=
</span> =3D <span style=3D"color:rgb(79,193,255)">message</span>.<span styl=
e=3D"color:rgb(220,220,170)">getFrom</span>();</div><div>      <span style=
=3D"color:rgb(86,156,214)">var</span> <span style=3D"color:rgb(156,220,254)=
">emailRegex</span> =3D<span style=3D"color:rgb(209,105,105)"> /</span><spa=
n style=3D"color:rgb(206,145,120)">([</span><span style=3D"color:rgb(209,10=
5,105)">a-zA-Z0-9._-</span><span style=3D"color:rgb(206,145,120)">]</span><=
span style=3D"color:rgb(215,186,125)">+</span><span style=3D"color:rgb(209,=
105,105)">@</span><span style=3D"color:rgb(206,145,120)">[</span><span styl=
e=3D"color:rgb(209,105,105)">a-zA-Z0-9._-</span><span style=3D"color:rgb(20=
6,145,120)">]</span><span style=3D"color:rgb(215,186,125)">+\.</span><span =
style=3D"color:rgb(206,145,120)">[</span><span style=3D"color:rgb(209,105,1=
05)">a-zA-Z0-9._-</span><span style=3D"color:rgb(206,145,120)">]</span><spa=
n style=3D"color:rgb(215,186,125)">+</span><span style=3D"color:rgb(206,145=
,120)">)</span><span style=3D"color:rgb(209,105,105)">/</span><span style=
=3D"color:rgb(86,156,214)">gi</span>;</div><div>      <span style=3D"color:=
rgb(86,156,214)">var</span> <span style=3D"color:rgb(156,220,254)">recipien=
tEmail</span> =3D <span style=3D"color:rgb(79,193,255)">replyToEmail</span>=
.<span style=3D"color:rgb(220,220,170)">match</span>(<span style=3D"color:r=
gb(156,220,254)">emailRegex</span>); <span style=3D"color:rgb(106,153,85)">=
//&quot;<a href=3D"mailto:monica@caritatech.com">monica@caritatech.com</a>&=
quot; </span></div><div>  </div><div>      </div><div>      <span style=3D"=
color:rgb(86,156,214)">const</span> <span style=3D"color:rgb(79,193,255)">p=
ostJobResponse</span> =3D <span style=3D"color:rgb(220,220,170)">postJobEma=
il</span>(<span style=3D"color:rgb(79,193,255)">message</span>.<span style=
=3D"color:rgb(220,220,170)">getPlainBody</span>(), <span style=3D"color:rgb=
(79,193,255)">specificSubject</span>, <span style=3D"color:rgb(156,220,254)=
">recipientEmail</span>, <span style=3D"color:rgb(79,193,255)">recipientNam=
e</span>)</div><div>  </div><div>      <span style=3D"color:rgb(156,220,254=
)">Logger</span>.<span style=3D"color:rgb(220,220,170)">log</span>(<span st=
yle=3D"color:rgb(79,193,255)">postJobResponse</span>)</div><div>      </div=
><div>    </div><div>      <span style=3D"color:rgb(86,156,214)">const</spa=
n> <span style=3D"color:rgb(79,193,255)">options</span> =3D {</div><div>   =
     <span style=3D"color:rgb(156,220,254)">htmlBody</span><span style=3D"c=
olor:rgb(156,220,254)">:</span> <span style=3D"color:rgb(206,145,120)">`&lt=
;div style=3D&quot;font-family: Arial; white-space: pre-wrap;&quot;&gt;</sp=
an><span style=3D"color:rgb(86,156,214)">${</span><span style=3D"color:rgb(=
220,220,170)">getAnswerFromResponse</span>(<span style=3D"color:rgb(79,193,=
255)">postJobResponse</span>)<span style=3D"color:rgb(86,156,214)">}</span>=
<span style=3D"color:rgb(206,145,120)">&lt;/div&gt;`</span>,</div><div>    =
    <span style=3D"color:rgb(156,220,254)">attachments</span><span style=3D=
"color:rgb(156,220,254)">:</span> [<span style=3D"color:rgb(79,193,255)">at=
tachment</span>] <span style=3D"color:rgb(106,153,85)">// Add the attachmen=
t to the email</span></div><div>  </div><div>      };</div><div>  </div><di=
v>      <span style=3D"color:rgb(79,193,255)">message</span>.<span style=3D=
"color:rgb(220,220,170)">reply</span>(<span style=3D"color:rgb(206,145,120)=
">&#39;&#39;</span>, <span style=3D"color:rgb(79,193,255)">options</span>);=
 <span style=3D"color:rgb(106,153,85)">// Reply to the same email thread</s=
pan></div><div>      <span style=3D"color:rgb(156,220,254)">thread</span>.<=
span style=3D"color:rgb(220,220,170)">markRead</span>();</div><div>  </div>=
<br><div>      <span style=3D"color:rgb(156,220,254)">Logger</span>.<span s=
tyle=3D"color:rgb(220,220,170)">log</span>(<span style=3D"color:rgb(206,145=
,120)">&#39;Auto-reply sent to: &#39;</span> + <span style=3D"color:rgb(156=
,220,254)">recipientEmail</span>);</div><div>  </div><div>      <span style=
=3D"color:rgb(156,220,254)">thread</span>.<span style=3D"color:rgb(220,220,=
170)">addLabel</span>(<span style=3D"color:rgb(156,220,254)">repliedLabel</=
span>);</div><div>  </div><br><div>    });</div><div>    <span style=3D"col=
or:rgb(156,220,254)">Logger</span>.<span style=3D"color:rgb(220,220,170)">l=
og</span>(<span style=3D"color:rgb(206,145,120)">&#39;sendSmartAutoReply fi=
nished&#39;</span>);</div><div>  </div><div>  }</div><div>  </div></div></d=
iv>

--0000000000009abe9a060b589fc9--
